function p = GetPolysRelaxed(n,e,N)
% this file is generated by RelaxedCexp.mws
a = zeros(1,35);

for k = 1:N

    n1 = n(1,k);

    n2 = n(2,k);

    n3 = n(3,k);

    e1 = e(1,k);

    e2 = e(2,k);

    e3 = e(3,k);

    new_a = [(n1 * e1 + n3 * e3 + n2 * e2) ^ 2 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (2 * n1 * e3 + 2 * n3 * e1) + 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (-2 * n2 * e3 + 2 * n3 * e2) 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (2 * n1 * e2 + 2 * n2 * e1) + 2 * (2 * n1 * e3 - 2 * n3 * e1) * (2 * n1 * e3 + 2 * n3 * e1) + 2 * (2 * n3 * e2 + 2 * n2 * e3) * (-2 * n2 * e3 + 2 * n3 * e2) 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (2 * n1 * e3 + 2 * n3 * e1) + 2 * (-n2 * e2 - n1 * e1 + n3 * e3) * (-2 * n2 * e3 + 2 * n3 * e2) 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (2 * n3 * e2 + 2 * n2 * e3) + 2 * (-n2 * e2 - n1 * e1 + n3 * e3) * (2 * n1 * e3 - 2 * n3 * e1) 2 * (2 * n1 * e3 - 2 * n3 * e1) * (2 * n1 * e2 + 2 * n2 * e1) + 2 * (-n3 * e3 - n1 * e1 + n2 * e2) * (-2 * n2 * e3 + 2 * n3 * e2) 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (-n3 * e3 - n1 * e1 + n2 * e2) + 2 * (2 * n1 * e3 - 2 * n3 * e1) * (2 * n3 * e2 + 2 * n2 * e3) 2 * (2 * n1 * e3 - 2 * n3 * e1) * (-n2 * e2 + n1 * e1 - n3 * e3) + 2 * (-2 * n2 * e3 + 2 * n3 * e2) * (2 * n1 * e2 + 2 * n2 * e1) 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (-n2 * e2 + n1 * e1 - n3 * e3) + 2 * (-2 * n2 * e3 + 2 * n3 * e2) * (2 * n1 * e3 + 2 * n3 * e1) (-n2 * e2 + n1 * e1 - n3 * e3) ^ 2 2 * (-2 * n2 * e3 + 2 * n3 * e2) * (-n2 * e2 + n1 * e1 - n3 * e3) 2 * (2 * n1 * e2 + 2 * n2 * e1) * (-n2 * e2 + n1 * e1 - n3 * e3) 2 * (2 * n1 * e3 + 2 * n3 * e1) * (-n2 * e2 + n1 * e1 - n3 * e3) 2 * (-n3 * e3 - n1 * e1 + n2 * e2) * (-n2 * e2 + n1 * e1 - n3 * e3) + (2 * n1 * e2 + 2 * n2 * e1) ^ 2 2 * (-n2 * e2 - n1 * e1 + n3 * e3) * (-n2 * e2 + n1 * e1 - n3 * e3) + (2 * n1 * e3 + 2 * n3 * e1) ^ 2 2 * (-n3 * e3 - n1 * e1 + n2 * e2) * (2 * n1 * e2 + 2 * n2 * e1) 2 * (-n2 * e2 - n1 * e1 + n3 * e3) * (2 * n1 * e3 + 2 * n3 * e1) 2 * (2 * n3 * e2 + 2 * n2 * e3) * (-n3 * e3 - n1 * e1 + n2 * e2) 2 * (2 * n3 * e2 + 2 * n2 * e3) * (-n2 * e2 + n1 * e1 - n3 * e3) + 2 * (2 * n1 * e3 + 2 * n3 * e1) * (2 * n1 * e2 + 2 * n2 * e1) 2 * (2 * n3 * e2 + 2 * n2 * e3) * (2 * n1 * e2 + 2 * n2 * e1) + 2 * (-n3 * e3 - n1 * e1 + n2 * e2) * (2 * n1 * e3 + 2 * n3 * e1) 2 * (-n2 * e2 - n1 * e1 + n3 * e3) * (2 * n1 * e2 + 2 * n2 * e1) + 2 * (2 * n3 * e2 + 2 * n2 * e3) * (2 * n1 * e3 + 2 * n3 * e1) (-n2 * e2 - n1 * e1 + n3 * e3) ^ 2 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (-n2 * e2 - n1 * e1 + n3 * e3) (-n3 * e3 - n1 * e1 + n2 * e2) ^ 2 2 * (-n2 * e2 - n1 * e1 + n3 * e3) * (2 * n3 * e2 + 2 * n2 * e3) 2 * (2 * n1 * e3 - 2 * n3 * e1) * (-n3 * e3 - n1 * e1 + n2 * e2) 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (-2 * n1 * e2 + 2 * n2 * e1) 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (-n2 * e2 + n1 * e1 - n3 * e3) + (-2 * n2 * e3 + 2 * n3 * e2) ^ 2 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (-n3 * e3 - n1 * e1 + n2 * e2) + (2 * n1 * e3 - 2 * n3 * e1) ^ 2 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (-n2 * e2 - n1 * e1 + n3 * e3) + (-2 * n1 * e2 + 2 * n2 * e1) ^ 2 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (2 * n1 * e2 + 2 * n2 * e1) + 2 * (2 * n1 * e3 - 2 * n3 * e1) * (-2 * n2 * e3 + 2 * n3 * e2) 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (2 * n3 * e2 + 2 * n2 * e3) + 2 * (-2 * n1 * e2 + 2 * n2 * e1) * (2 * n1 * e3 - 2 * n3 * e1) 2 * (-n2 * e2 - n1 * e1 + n3 * e3) * (-n3 * e3 - n1 * e1 + n2 * e2) + (2 * n3 * e2 + 2 * n2 * e3) ^ 2 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (-2 * n2 * e3 + 2 * n3 * e2) 2 * (n1 * e1 + n3 * e3 + n2 * e2) * (2 * n1 * e3 - 2 * n3 * e1)];

    a = a + new_a;
end

derv1exp = [0 1 1 1 0 1 0 2 2 3 0 0 0 2 0 0 1 0 1 0; 0 0 1 0 1 2 2 1 0 0 0 3 0 0 2 0 1 1 0 1; 0 1 1 2 2 0 1 0 1 0 3 0 1 0 0 2 0 1 0 0;];

derv2exp = [0 1 1 1 0 1 0 2 2 3 0 0 0 2 0 0 1 0 1 0; 0 0 1 0 1 2 2 1 0 0 0 3 0 0 2 0 1 1 0 1; 0 1 1 2 2 0 1 0 1 0 3 0 1 0 0 2 0 1 0 0;];

derv3exp = [0 1 1 1 0 1 0 2 2 3 0 0 0 2 0 0 1 0 1 0; 0 0 1 0 1 2 2 1 0 0 0 3 0 0 2 0 1 1 0 1; 0 1 1 2 2 0 1 0 1 0 3 0 1 0 0 2 0 1 0 0;];

derv1coeffs = [a(34) 2 * a(9) 2 * a(19) 2 * a(15) a(21) 2 * a(14) a(20) 3 * a(12) 3 * a(13) 4 * a(10) a(17) a(16) a(2) 3 * a(11) a(6) a(4) 2 * a(8) a(3) 2 * a(28) a(31)];

derv2coeffs = [a(35) a(3) 2 * a(20) a(21) 2 * a(33) 3 * a(16) 3 * a(18) 2 * a(14) a(19) a(12) a(25) 4 * a(24) a(32) a(8) 3 * a(26) a(5) 2 * a(6) 2 * a(7) a(31) 2 * a(29)];

derv3coeffs = [a(27) 2 * a(4) 2 * a(21) 3 * a(17) 3 * a(25) a(20) 2 * a(33) a(19) 2 * a(15) a(13) 4 * a(22) a(18) 2 * a(30) a(9) a(7) 3 * a(23) a(3) 2 * a(5) a(2) a(32)];

p(1).exp = derv1exp; p(1).coef = derv1coeffs; p(1).m = 20;
p(2).exp = derv2exp; p(2).coef = derv2coeffs; p(2).m = 20;
p(3).exp = derv3exp; p(3).coef = derv3coeffs; p(3).m = 20;
